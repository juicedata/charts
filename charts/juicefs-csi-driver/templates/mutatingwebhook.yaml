{{- $certEnabled := .Values.webhook.certManager.enabled }}
{{- $webhookApiVersion := include "webhook.apiVersion" . -}}
{{- $caCert := include "webhook.caBundleCertPEM" . -}}
{{- $crtPEM := include "webhook.certPEM" . -}}
{{- $keyPEM := include "webhook.keyPEM" . -}}
{{- $timeoutSeconds := .Values.webhook.timeoutSeconds }}

{{- if eq .Values.mountMode "sidecar" }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: juicefs-admission-webhook
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "juicefs-cert" | quote }}
  {{- end }}
webhooks:
  - name: sidecar.inject.juicefs.com
    rules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["pods"]
    clientConfig:
      service:
        namespace: {{ .Release.Namespace | quote }}
        name: juicefs-admission-webhook
        path: "/juicefs/inject-v1-pod"
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $caCert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
    timeoutSeconds: {{ $timeoutSeconds }}
    failurePolicy: {{ $.Values.webhook.FailurePolicy }}
    sideEffects: None
    admissionReviewVersions: ["v1","v1beta1"]
    namespaceSelector:
      matchLabels:
        juicefs.com/enable-injection: "true"
{{- if $certEnabled }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: juicefs-selfsigned
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: juicefs-cert
  namespace: {{ .Release.Namespace }}
spec:
  duration: 43800h #5year
  dnsNames:
    - juicefs-admission-webhook
    - juicefs-admission-webhook.kube-system
    - juicefs-admission-webhook.kube-system.svc
  issuerRef:
    name: juicefs-selfsigned
    kind: Issuer
  secretName: juicefs-webhook-certs
{{- end }}
{{- end }}
